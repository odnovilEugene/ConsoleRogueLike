Game.Instance.GameLoop() можно добавить параметр флага/токена выхода.

ObjectSymbols можно сделать через интерфейс с статическими методами и реализующими его классами, для того чтобы добавить возможность реализовывать свою логику для хранения символов.

Utils не нужен.

В IMap можно добавить сеттеры для высоты и ширины.

IReadOnlyMap.Field должен возвращать неизменяемую коллекцию.

IGameObject.Symbol и ObjectSymbols два разных подхода которые не стоит сочетать. Либо инкапусулировать символ статическим полем в каждом типе, либо собрать все символы в 1 класс в виде словоря <тип, символ>. Либо написать код который из конфига назначает символы внутри классов.

В ILivingGameObject MaxHp, Hp - можно вынести в отдельную стркутур, как и может быть IsIsDead. (*)

Position2D переименовать (*), и использовать везде где можно. (*)

Position2D можно добавить интерфейсы для сравнения и математических операций в новом дотнете (*).

IMovingGameObject.ChooseDirection должен возвращать Vector2. (*)

Все интерфейсы игровых объектов должны наследоваться от IGameObject.

Все методы Console.WriteLine должны содержаться либо в классе рендеринга либо в классе логирования.

Везде где возможно передавать карту под интерфейсом только для чтения например в рендер.
 
В GenerateProps неправильное сообщение о ошибке. (*)

LevelLoop должен иметь ограничение, инчае он выполняется на максимальной частоте.

Не нашёл где когда ход совершают противники.

Убрать If в гейм луп и переписать код через состояния игры и хотя бы switch а не множество булевых флагов. Разбить код на методы для каждого состояния.

Проверки столкновений должны быть отдельной системой. Вызовы методов и обработка результатов в логике объектов.

Игровые объекты не должны менять массив карты, карта должна подписываться на события объектов и обновляться сама. (*)
